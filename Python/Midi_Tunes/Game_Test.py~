#!/usr/bin/env python3

import os
import random
import turtle
 
turtle.speed(0) #speed of animation
turtle.bgcolor("black")
turtle.hideturtle() #hide turtle
turtle.setundobuffer(1) #limits the amount of memory the turtle memory uses
turtle.tracer(1) #speed up animation
 
class Sprite(turtle.Turtle):
    def __init__(self, shape, color, startx, starty):
        turtle.Turtle.__init__(self, shape = shape)
        self.speed(0)
        self.penup()
        self.color(color)
        self.goto(startx, starty)
        self.speed = 1
        self = 0
 
    def move(self):
 	self.fd(self.speed)
     	
	if self.xcor > 290:
		self.setx(290)
		self.rt(60)
 
	if self.xcor < -290:
		self.setx(-290)
		self.rt(60)
 
	if self.ycor > 290:
		self.sety(290)
		self.rt(60)
 
	if self.ycor < -290:
		self.sety(-290)
		self.rt(60)
       
class Player(Sprite):
    def __init__(self, shape, color, startx, starty):
        Sprite.__init__(self, shape, color, startx, starty)
        self.speed = 4
        self.lives = 3
 
    def turn_left(self):
        self.lt(45)
    def turn_right(self):
        self.rt(45)
    def accelerate(self):
        self.speed += 1
    def decelerate(self):
        self.speed -= 1
 
class Game():
    def __init__(self):
        self.level = 1
        self.score = 0
        self.state = "playing"
        self.pen = turtle.Turtle()
        self.lives = 3
 
    def draw_border(self):
        self.pen.speed(0)
        self.pen.color("white")
        self.pen.pensize(3)
        self.pen.penup()
        self.pen.goto(-300,300)
        self.pen.pendown()
        for side in range(4):
            self.pen.fd(600)
            self.pen.rt(90)
        self.pen.penup()
        self.pen.ht()
 
#Game Object Creation
game = Game()
 
game.draw_border()
 
#create sprites
player = Player("triangle", "white", 0, 0)
 
 
#KEYBOARD
turtle.onkey(player.turn_left, "Left")
turtle.onkey(player.turn_right, "Right")
turtle.onkey(player.accelerate, "Up")
turtle.onkey(player.decelerate, "Down")
turtle.listen()
 
while True:
    player.move()
